public class QBenchmark3S {

    public QBenchmark3S() {
        super();
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 2 && qstatei.length == 2;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_1(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 1; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1]};
        q_state_0 = new float[]{q_state_0[1], q_state_0[0]};
        q_state_1 = new float[]{q_state_1[1], q_state_1[0]};
        boolean $$_tmp_measureVar1;
        if (q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0]) {
            q_state_0 = new float[]{0.0F, q_state_0[1]};
            q_state_1 = new float[]{0.0F, q_state_1[1]};
            $$_tmp_measureVar1 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], 0.0F};
            q_state_1 = new float[]{q_state_1[0], 0.0F};
            $$_tmp_measureVar1 = false;
        }
        boolean b_0 = $$_tmp_measureVar1;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 4 && qstatei.length == 4;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_2(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 2; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3]};
        q_state_0 = new float[]{q_state_0[2], q_state_0[3], q_state_0[0], q_state_0[1]};
        q_state_1 = new float[]{q_state_1[2], q_state_1[3], q_state_1[0], q_state_1[1]};
        boolean $$_tmp_measureVar2;
        if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1]) {
            q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3]};
            q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3]};
            $$_tmp_measureVar2 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F};
            $$_tmp_measureVar2 = false;
        }
        boolean b_0 = $$_tmp_measureVar2;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 8 && qstatei.length == 8;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_3(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 4; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3], qstate[4], qstate[5], qstate[6], qstate[7]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3], qstatei[4], qstatei[5], qstatei[6], qstatei[7]};
        q_state_0 = new float[]{q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3]};
        q_state_1 = new float[]{q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3]};
        boolean $$_tmp_measureVar3;
        if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7]};
            $$_tmp_measureVar3 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar3 = false;
        }
        boolean b_0 = $$_tmp_measureVar3;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 16 && qstatei.length == 16;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_4(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 8; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3], qstate[4], qstate[5], qstate[6], qstate[7], qstate[8], qstate[9], qstate[10], qstate[11], qstate[12], qstate[13], qstate[14], qstate[15]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3], qstatei[4], qstatei[5], qstatei[6], qstatei[7], qstatei[8], qstatei[9], qstatei[10], qstatei[11], qstatei[12], qstatei[13], qstatei[14], qstatei[15]};
        q_state_0 = new float[]{q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7]};
        q_state_1 = new float[]{q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7]};
        boolean $$_tmp_measureVar4;
        if (q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
            $$_tmp_measureVar4 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar4 = false;
        }
        boolean b_0 = $$_tmp_measureVar4;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 32 && qstatei.length == 32;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_5(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 16; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3], qstate[4], qstate[5], qstate[6], qstate[7], qstate[8], qstate[9], qstate[10], qstate[11], qstate[12], qstate[13], qstate[14], qstate[15], qstate[16], qstate[17], qstate[18], qstate[19], qstate[20], qstate[21], qstate[22], qstate[23], qstate[24], qstate[25], qstate[26], qstate[27], qstate[28], qstate[29], qstate[30], qstate[31]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3], qstatei[4], qstatei[5], qstatei[6], qstatei[7], qstatei[8], qstatei[9], qstatei[10], qstatei[11], qstatei[12], qstatei[13], qstatei[14], qstatei[15], qstatei[16], qstatei[17], qstatei[18], qstatei[19], qstatei[20], qstatei[21], qstatei[22], qstatei[23], qstatei[24], qstatei[25], qstatei[26], qstatei[27], qstatei[28], qstatei[29], qstatei[30], qstatei[31]};
        q_state_0 = new float[]{q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31], q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
        q_state_1 = new float[]{q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31], q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
        boolean $$_tmp_measureVar5;
        if (q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
            $$_tmp_measureVar5 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar5 = false;
        }
        boolean b_0 = $$_tmp_measureVar5;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 64 && qstatei.length == 64;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_6(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 32; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3], qstate[4], qstate[5], qstate[6], qstate[7], qstate[8], qstate[9], qstate[10], qstate[11], qstate[12], qstate[13], qstate[14], qstate[15], qstate[16], qstate[17], qstate[18], qstate[19], qstate[20], qstate[21], qstate[22], qstate[23], qstate[24], qstate[25], qstate[26], qstate[27], qstate[28], qstate[29], qstate[30], qstate[31], qstate[32], qstate[33], qstate[34], qstate[35], qstate[36], qstate[37], qstate[38], qstate[39], qstate[40], qstate[41], qstate[42], qstate[43], qstate[44], qstate[45], qstate[46], qstate[47], qstate[48], qstate[49], qstate[50], qstate[51], qstate[52], qstate[53], qstate[54], qstate[55], qstate[56], qstate[57], qstate[58], qstate[59], qstate[60], qstate[61], qstate[62], qstate[63]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3], qstatei[4], qstatei[5], qstatei[6], qstatei[7], qstatei[8], qstatei[9], qstatei[10], qstatei[11], qstatei[12], qstatei[13], qstatei[14], qstatei[15], qstatei[16], qstatei[17], qstatei[18], qstatei[19], qstatei[20], qstatei[21], qstatei[22], qstatei[23], qstatei[24], qstatei[25], qstatei[26], qstatei[27], qstatei[28], qstatei[29], qstatei[30], qstatei[31], qstatei[32], qstatei[33], qstatei[34], qstatei[35], qstatei[36], qstatei[37], qstatei[38], qstatei[39], qstatei[40], qstatei[41], qstatei[42], qstatei[43], qstatei[44], qstatei[45], qstatei[46], qstatei[47], qstatei[48], qstatei[49], qstatei[50], qstatei[51], qstatei[52], qstatei[53], qstatei[54], qstatei[55], qstatei[56], qstatei[57], qstatei[58], qstatei[59], qstatei[60], qstatei[61], qstatei[62], qstatei[63]};
        q_state_0 = new float[]{q_state_0[32], q_state_0[33], q_state_0[34], q_state_0[35], q_state_0[36], q_state_0[37], q_state_0[38], q_state_0[39], q_state_0[40], q_state_0[41], q_state_0[42], q_state_0[43], q_state_0[44], q_state_0[45], q_state_0[46], q_state_0[47], q_state_0[48], q_state_0[49], q_state_0[50], q_state_0[51], q_state_0[52], q_state_0[53], q_state_0[54], q_state_0[55], q_state_0[56], q_state_0[57], q_state_0[58], q_state_0[59], q_state_0[60], q_state_0[61], q_state_0[62], q_state_0[63], q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
        q_state_1 = new float[]{q_state_1[32], q_state_1[33], q_state_1[34], q_state_1[35], q_state_1[36], q_state_1[37], q_state_1[38], q_state_1[39], q_state_1[40], q_state_1[41], q_state_1[42], q_state_1[43], q_state_1[44], q_state_1[45], q_state_1[46], q_state_1[47], q_state_1[48], q_state_1[49], q_state_1[50], q_state_1[51], q_state_1[52], q_state_1[53], q_state_1[54], q_state_1[55], q_state_1[56], q_state_1[57], q_state_1[58], q_state_1[59], q_state_1[60], q_state_1[61], q_state_1[62], q_state_1[63], q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
        boolean $$_tmp_measureVar6;
        if (q_state_0[32] * q_state_0[32] + q_state_1[32] * q_state_1[32] + q_state_0[33] * q_state_0[33] + q_state_1[33] * q_state_1[33] + q_state_0[34] * q_state_0[34] + q_state_1[34] * q_state_1[34] + q_state_0[35] * q_state_0[35] + q_state_1[35] * q_state_1[35] + q_state_0[36] * q_state_0[36] + q_state_1[36] * q_state_1[36] + q_state_0[37] * q_state_0[37] + q_state_1[37] * q_state_1[37] + q_state_0[38] * q_state_0[38] + q_state_1[38] * q_state_1[38] + q_state_0[39] * q_state_0[39] + q_state_1[39] * q_state_1[39] + q_state_0[40] * q_state_0[40] + q_state_1[40] * q_state_1[40] + q_state_0[41] * q_state_0[41] + q_state_1[41] * q_state_1[41] + q_state_0[42] * q_state_0[42] + q_state_1[42] * q_state_1[42] + q_state_0[43] * q_state_0[43] + q_state_1[43] * q_state_1[43] + q_state_0[44] * q_state_0[44] + q_state_1[44] * q_state_1[44] + q_state_0[45] * q_state_0[45] + q_state_1[45] * q_state_1[45] + q_state_0[46] * q_state_0[46] + q_state_1[46] * q_state_1[46] + q_state_0[47] * q_state_0[47] + q_state_1[47] * q_state_1[47] + q_state_0[48] * q_state_0[48] + q_state_1[48] * q_state_1[48] + q_state_0[49] * q_state_0[49] + q_state_1[49] * q_state_1[49] + q_state_0[50] * q_state_0[50] + q_state_1[50] * q_state_1[50] + q_state_0[51] * q_state_0[51] + q_state_1[51] * q_state_1[51] + q_state_0[52] * q_state_0[52] + q_state_1[52] * q_state_1[52] + q_state_0[53] * q_state_0[53] + q_state_1[53] * q_state_1[53] + q_state_0[54] * q_state_0[54] + q_state_1[54] * q_state_1[54] + q_state_0[55] * q_state_0[55] + q_state_1[55] * q_state_1[55] + q_state_0[56] * q_state_0[56] + q_state_1[56] * q_state_1[56] + q_state_0[57] * q_state_0[57] + q_state_1[57] * q_state_1[57] + q_state_0[58] * q_state_0[58] + q_state_1[58] * q_state_1[58] + q_state_0[59] * q_state_0[59] + q_state_1[59] * q_state_1[59] + q_state_0[60] * q_state_0[60] + q_state_1[60] * q_state_1[60] + q_state_0[61] * q_state_0[61] + q_state_1[61] * q_state_1[61] + q_state_0[62] * q_state_0[62] + q_state_1[62] * q_state_1[62] + q_state_0[63] * q_state_0[63] + q_state_1[63] * q_state_1[63] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[32], q_state_0[33], q_state_0[34], q_state_0[35], q_state_0[36], q_state_0[37], q_state_0[38], q_state_0[39], q_state_0[40], q_state_0[41], q_state_0[42], q_state_0[43], q_state_0[44], q_state_0[45], q_state_0[46], q_state_0[47], q_state_0[48], q_state_0[49], q_state_0[50], q_state_0[51], q_state_0[52], q_state_0[53], q_state_0[54], q_state_0[55], q_state_0[56], q_state_0[57], q_state_0[58], q_state_0[59], q_state_0[60], q_state_0[61], q_state_0[62], q_state_0[63]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[32], q_state_1[33], q_state_1[34], q_state_1[35], q_state_1[36], q_state_1[37], q_state_1[38], q_state_1[39], q_state_1[40], q_state_1[41], q_state_1[42], q_state_1[43], q_state_1[44], q_state_1[45], q_state_1[46], q_state_1[47], q_state_1[48], q_state_1[49], q_state_1[50], q_state_1[51], q_state_1[52], q_state_1[53], q_state_1[54], q_state_1[55], q_state_1[56], q_state_1[57], q_state_1[58], q_state_1[59], q_state_1[60], q_state_1[61], q_state_1[62], q_state_1[63]};
            $$_tmp_measureVar6 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar6 = false;
        }
        boolean b_0 = $$_tmp_measureVar6;
        assert b_0 != q_test;
    }
    /*@
      requires qstate != null && qstatei != null && qstate.length == 128 && qstatei.length == 128;
      requires (\exists int i; i >= 0 && i < qstate.length; qstate[i] == 1.0F && (\forall int j; j >= 0 && j < qstate.length; (i != j) ==> qstate[j] == 0.0F));
      requires (\forall int i; i >= 0 && i < qstate.length; qstatei[i] == 0.0F);
   */

    public static void qbits_7(/*@ non_null */
            float[] qstate, /*@ non_null */
            float[] qstatei) {
        boolean q_test = false;
        for (int i = 64; i < qstate.length; ++i) {
            q_test = q_test || qstate[i] == 1.0F;
        }
        float[] q_state_0 = new float[]{qstate[0], qstate[1], qstate[2], qstate[3], qstate[4], qstate[5], qstate[6], qstate[7], qstate[8], qstate[9], qstate[10], qstate[11], qstate[12], qstate[13], qstate[14], qstate[15], qstate[16], qstate[17], qstate[18], qstate[19], qstate[20], qstate[21], qstate[22], qstate[23], qstate[24], qstate[25], qstate[26], qstate[27], qstate[28], qstate[29], qstate[30], qstate[31], qstate[32], qstate[33], qstate[34], qstate[35], qstate[36], qstate[37], qstate[38], qstate[39], qstate[40], qstate[41], qstate[42], qstate[43], qstate[44], qstate[45], qstate[46], qstate[47], qstate[48], qstate[49], qstate[50], qstate[51], qstate[52], qstate[53], qstate[54], qstate[55], qstate[56], qstate[57], qstate[58], qstate[59], qstate[60], qstate[61], qstate[62], qstate[63], qstate[64], qstate[65], qstate[66], qstate[67], qstate[68], qstate[69], qstate[70], qstate[71], qstate[72], qstate[73], qstate[74], qstate[75], qstate[76], qstate[77], qstate[78], qstate[79], qstate[80], qstate[81], qstate[82], qstate[83], qstate[84], qstate[85], qstate[86], qstate[87], qstate[88], qstate[89], qstate[90], qstate[91], qstate[92], qstate[93], qstate[94], qstate[95], qstate[96], qstate[97], qstate[98], qstate[99], qstate[100], qstate[101], qstate[102], qstate[103], qstate[104], qstate[105], qstate[106], qstate[107], qstate[108], qstate[109], qstate[110], qstate[111], qstate[112], qstate[113], qstate[114], qstate[115], qstate[116], qstate[117], qstate[118], qstate[119], qstate[120], qstate[121], qstate[122], qstate[123], qstate[124], qstate[125], qstate[126], qstate[127]};
        float[] q_state_1 = new float[]{qstatei[0], qstatei[1], qstatei[2], qstatei[3], qstatei[4], qstatei[5], qstatei[6], qstatei[7], qstatei[8], qstatei[9], qstatei[10], qstatei[11], qstatei[12], qstatei[13], qstatei[14], qstatei[15], qstatei[16], qstatei[17], qstatei[18], qstatei[19], qstatei[20], qstatei[21], qstatei[22], qstatei[23], qstatei[24], qstatei[25], qstatei[26], qstatei[27], qstatei[28], qstatei[29], qstatei[30], qstatei[31], qstatei[32], qstatei[33], qstatei[34], qstatei[35], qstatei[36], qstatei[37], qstatei[38], qstatei[39], qstatei[40], qstatei[41], qstatei[42], qstatei[43], qstatei[44], qstatei[45], qstatei[46], qstatei[47], qstatei[48], qstatei[49], qstatei[50], qstatei[51], qstatei[52], qstatei[53], qstatei[54], qstatei[55], qstatei[56], qstatei[57], qstatei[58], qstatei[59], qstatei[60], qstatei[61], qstatei[62], qstatei[63], qstatei[64], qstatei[65], qstatei[66], qstatei[67], qstatei[68], qstatei[69], qstatei[70], qstatei[71], qstatei[72], qstatei[73], qstatei[74], qstatei[75], qstatei[76], qstatei[77], qstatei[78], qstatei[79], qstatei[80], qstatei[81], qstatei[82], qstatei[83], qstatei[84], qstatei[85], qstatei[86], qstatei[87], qstatei[88], qstatei[89], qstatei[90], qstatei[91], qstatei[92], qstatei[93], qstatei[94], qstatei[95], qstatei[96], qstatei[97], qstatei[98], qstatei[99], qstatei[100], qstatei[101], qstatei[102], qstatei[103], qstatei[104], qstatei[105], qstatei[106], qstatei[107], qstatei[108], qstatei[109], qstatei[110], qstatei[111], qstatei[112], qstatei[113], qstatei[114], qstatei[115], qstatei[116], qstatei[117], qstatei[118], qstatei[119], qstatei[120], qstatei[121], qstatei[122], qstatei[123], qstatei[124], qstatei[125], qstatei[126], qstatei[127]};
        q_state_0 = new float[]{q_state_0[64], q_state_0[65], q_state_0[66], q_state_0[67], q_state_0[68], q_state_0[69], q_state_0[70], q_state_0[71], q_state_0[72], q_state_0[73], q_state_0[74], q_state_0[75], q_state_0[76], q_state_0[77], q_state_0[78], q_state_0[79], q_state_0[80], q_state_0[81], q_state_0[82], q_state_0[83], q_state_0[84], q_state_0[85], q_state_0[86], q_state_0[87], q_state_0[88], q_state_0[89], q_state_0[90], q_state_0[91], q_state_0[92], q_state_0[93], q_state_0[94], q_state_0[95], q_state_0[96], q_state_0[97], q_state_0[98], q_state_0[99], q_state_0[100], q_state_0[101], q_state_0[102], q_state_0[103], q_state_0[104], q_state_0[105], q_state_0[106], q_state_0[107], q_state_0[108], q_state_0[109], q_state_0[110], q_state_0[111], q_state_0[112], q_state_0[113], q_state_0[114], q_state_0[115], q_state_0[116], q_state_0[117], q_state_0[118], q_state_0[119], q_state_0[120], q_state_0[121], q_state_0[122], q_state_0[123], q_state_0[124], q_state_0[125], q_state_0[126], q_state_0[127], q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31], q_state_0[32], q_state_0[33], q_state_0[34], q_state_0[35], q_state_0[36], q_state_0[37], q_state_0[38], q_state_0[39], q_state_0[40], q_state_0[41], q_state_0[42], q_state_0[43], q_state_0[44], q_state_0[45], q_state_0[46], q_state_0[47], q_state_0[48], q_state_0[49], q_state_0[50], q_state_0[51], q_state_0[52], q_state_0[53], q_state_0[54], q_state_0[55], q_state_0[56], q_state_0[57], q_state_0[58], q_state_0[59], q_state_0[60], q_state_0[61], q_state_0[62], q_state_0[63]};
        q_state_1 = new float[]{q_state_1[64], q_state_1[65], q_state_1[66], q_state_1[67], q_state_1[68], q_state_1[69], q_state_1[70], q_state_1[71], q_state_1[72], q_state_1[73], q_state_1[74], q_state_1[75], q_state_1[76], q_state_1[77], q_state_1[78], q_state_1[79], q_state_1[80], q_state_1[81], q_state_1[82], q_state_1[83], q_state_1[84], q_state_1[85], q_state_1[86], q_state_1[87], q_state_1[88], q_state_1[89], q_state_1[90], q_state_1[91], q_state_1[92], q_state_1[93], q_state_1[94], q_state_1[95], q_state_1[96], q_state_1[97], q_state_1[98], q_state_1[99], q_state_1[100], q_state_1[101], q_state_1[102], q_state_1[103], q_state_1[104], q_state_1[105], q_state_1[106], q_state_1[107], q_state_1[108], q_state_1[109], q_state_1[110], q_state_1[111], q_state_1[112], q_state_1[113], q_state_1[114], q_state_1[115], q_state_1[116], q_state_1[117], q_state_1[118], q_state_1[119], q_state_1[120], q_state_1[121], q_state_1[122], q_state_1[123], q_state_1[124], q_state_1[125], q_state_1[126], q_state_1[127], q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31], q_state_1[32], q_state_1[33], q_state_1[34], q_state_1[35], q_state_1[36], q_state_1[37], q_state_1[38], q_state_1[39], q_state_1[40], q_state_1[41], q_state_1[42], q_state_1[43], q_state_1[44], q_state_1[45], q_state_1[46], q_state_1[47], q_state_1[48], q_state_1[49], q_state_1[50], q_state_1[51], q_state_1[52], q_state_1[53], q_state_1[54], q_state_1[55], q_state_1[56], q_state_1[57], q_state_1[58], q_state_1[59], q_state_1[60], q_state_1[61], q_state_1[62], q_state_1[63]};
        boolean $$_tmp_measureVar7;
        if (q_state_0[64] * q_state_0[64] + q_state_1[64] * q_state_1[64] + q_state_0[65] * q_state_0[65] + q_state_1[65] * q_state_1[65] + q_state_0[66] * q_state_0[66] + q_state_1[66] * q_state_1[66] + q_state_0[67] * q_state_0[67] + q_state_1[67] * q_state_1[67] + q_state_0[68] * q_state_0[68] + q_state_1[68] * q_state_1[68] + q_state_0[69] * q_state_0[69] + q_state_1[69] * q_state_1[69] + q_state_0[70] * q_state_0[70] + q_state_1[70] * q_state_1[70] + q_state_0[71] * q_state_0[71] + q_state_1[71] * q_state_1[71] + q_state_0[72] * q_state_0[72] + q_state_1[72] * q_state_1[72] + q_state_0[73] * q_state_0[73] + q_state_1[73] * q_state_1[73] + q_state_0[74] * q_state_0[74] + q_state_1[74] * q_state_1[74] + q_state_0[75] * q_state_0[75] + q_state_1[75] * q_state_1[75] + q_state_0[76] * q_state_0[76] + q_state_1[76] * q_state_1[76] + q_state_0[77] * q_state_0[77] + q_state_1[77] * q_state_1[77] + q_state_0[78] * q_state_0[78] + q_state_1[78] * q_state_1[78] + q_state_0[79] * q_state_0[79] + q_state_1[79] * q_state_1[79] + q_state_0[80] * q_state_0[80] + q_state_1[80] * q_state_1[80] + q_state_0[81] * q_state_0[81] + q_state_1[81] * q_state_1[81] + q_state_0[82] * q_state_0[82] + q_state_1[82] * q_state_1[82] + q_state_0[83] * q_state_0[83] + q_state_1[83] * q_state_1[83] + q_state_0[84] * q_state_0[84] + q_state_1[84] * q_state_1[84] + q_state_0[85] * q_state_0[85] + q_state_1[85] * q_state_1[85] + q_state_0[86] * q_state_0[86] + q_state_1[86] * q_state_1[86] + q_state_0[87] * q_state_0[87] + q_state_1[87] * q_state_1[87] + q_state_0[88] * q_state_0[88] + q_state_1[88] * q_state_1[88] + q_state_0[89] * q_state_0[89] + q_state_1[89] * q_state_1[89] + q_state_0[90] * q_state_0[90] + q_state_1[90] * q_state_1[90] + q_state_0[91] * q_state_0[91] + q_state_1[91] * q_state_1[91] + q_state_0[92] * q_state_0[92] + q_state_1[92] * q_state_1[92] + q_state_0[93] * q_state_0[93] + q_state_1[93] * q_state_1[93] + q_state_0[94] * q_state_0[94] + q_state_1[94] * q_state_1[94] + q_state_0[95] * q_state_0[95] + q_state_1[95] * q_state_1[95] + q_state_0[96] * q_state_0[96] + q_state_1[96] * q_state_1[96] + q_state_0[97] * q_state_0[97] + q_state_1[97] * q_state_1[97] + q_state_0[98] * q_state_0[98] + q_state_1[98] * q_state_1[98] + q_state_0[99] * q_state_0[99] + q_state_1[99] * q_state_1[99] + q_state_0[100] * q_state_0[100] + q_state_1[100] * q_state_1[100] + q_state_0[101] * q_state_0[101] + q_state_1[101] * q_state_1[101] + q_state_0[102] * q_state_0[102] + q_state_1[102] * q_state_1[102] + q_state_0[103] * q_state_0[103] + q_state_1[103] * q_state_1[103] + q_state_0[104] * q_state_0[104] + q_state_1[104] * q_state_1[104] + q_state_0[105] * q_state_0[105] + q_state_1[105] * q_state_1[105] + q_state_0[106] * q_state_0[106] + q_state_1[106] * q_state_1[106] + q_state_0[107] * q_state_0[107] + q_state_1[107] * q_state_1[107] + q_state_0[108] * q_state_0[108] + q_state_1[108] * q_state_1[108] + q_state_0[109] * q_state_0[109] + q_state_1[109] * q_state_1[109] + q_state_0[110] * q_state_0[110] + q_state_1[110] * q_state_1[110] + q_state_0[111] * q_state_0[111] + q_state_1[111] * q_state_1[111] + q_state_0[112] * q_state_0[112] + q_state_1[112] * q_state_1[112] + q_state_0[113] * q_state_0[113] + q_state_1[113] * q_state_1[113] + q_state_0[114] * q_state_0[114] + q_state_1[114] * q_state_1[114] + q_state_0[115] * q_state_0[115] + q_state_1[115] * q_state_1[115] + q_state_0[116] * q_state_0[116] + q_state_1[116] * q_state_1[116] + q_state_0[117] * q_state_0[117] + q_state_1[117] * q_state_1[117] + q_state_0[118] * q_state_0[118] + q_state_1[118] * q_state_1[118] + q_state_0[119] * q_state_0[119] + q_state_1[119] * q_state_1[119] + q_state_0[120] * q_state_0[120] + q_state_1[120] * q_state_1[120] + q_state_0[121] * q_state_0[121] + q_state_1[121] * q_state_1[121] + q_state_0[122] * q_state_0[122] + q_state_1[122] * q_state_1[122] + q_state_0[123] * q_state_0[123] + q_state_1[123] * q_state_1[123] + q_state_0[124] * q_state_0[124] + q_state_1[124] * q_state_1[124] + q_state_0[125] * q_state_0[125] + q_state_1[125] * q_state_1[125] + q_state_0[126] * q_state_0[126] + q_state_1[126] * q_state_1[126] + q_state_0[127] * q_state_0[127] + q_state_1[127] * q_state_1[127] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] + q_state_0[32] * q_state_0[32] + q_state_1[32] * q_state_1[32] + q_state_0[33] * q_state_0[33] + q_state_1[33] * q_state_1[33] + q_state_0[34] * q_state_0[34] + q_state_1[34] * q_state_1[34] + q_state_0[35] * q_state_0[35] + q_state_1[35] * q_state_1[35] + q_state_0[36] * q_state_0[36] + q_state_1[36] * q_state_1[36] + q_state_0[37] * q_state_0[37] + q_state_1[37] * q_state_1[37] + q_state_0[38] * q_state_0[38] + q_state_1[38] * q_state_1[38] + q_state_0[39] * q_state_0[39] + q_state_1[39] * q_state_1[39] + q_state_0[40] * q_state_0[40] + q_state_1[40] * q_state_1[40] + q_state_0[41] * q_state_0[41] + q_state_1[41] * q_state_1[41] + q_state_0[42] * q_state_0[42] + q_state_1[42] * q_state_1[42] + q_state_0[43] * q_state_0[43] + q_state_1[43] * q_state_1[43] + q_state_0[44] * q_state_0[44] + q_state_1[44] * q_state_1[44] + q_state_0[45] * q_state_0[45] + q_state_1[45] * q_state_1[45] + q_state_0[46] * q_state_0[46] + q_state_1[46] * q_state_1[46] + q_state_0[47] * q_state_0[47] + q_state_1[47] * q_state_1[47] + q_state_0[48] * q_state_0[48] + q_state_1[48] * q_state_1[48] + q_state_0[49] * q_state_0[49] + q_state_1[49] * q_state_1[49] + q_state_0[50] * q_state_0[50] + q_state_1[50] * q_state_1[50] + q_state_0[51] * q_state_0[51] + q_state_1[51] * q_state_1[51] + q_state_0[52] * q_state_0[52] + q_state_1[52] * q_state_1[52] + q_state_0[53] * q_state_0[53] + q_state_1[53] * q_state_1[53] + q_state_0[54] * q_state_0[54] + q_state_1[54] * q_state_1[54] + q_state_0[55] * q_state_0[55] + q_state_1[55] * q_state_1[55] + q_state_0[56] * q_state_0[56] + q_state_1[56] * q_state_1[56] + q_state_0[57] * q_state_0[57] + q_state_1[57] * q_state_1[57] + q_state_0[58] * q_state_0[58] + q_state_1[58] * q_state_1[58] + q_state_0[59] * q_state_0[59] + q_state_1[59] * q_state_1[59] + q_state_0[60] * q_state_0[60] + q_state_1[60] * q_state_1[60] + q_state_0[61] * q_state_0[61] + q_state_1[61] * q_state_1[61] + q_state_0[62] * q_state_0[62] + q_state_1[62] * q_state_1[62] + q_state_0[63] * q_state_0[63] + q_state_1[63] * q_state_1[63]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[64], q_state_0[65], q_state_0[66], q_state_0[67], q_state_0[68], q_state_0[69], q_state_0[70], q_state_0[71], q_state_0[72], q_state_0[73], q_state_0[74], q_state_0[75], q_state_0[76], q_state_0[77], q_state_0[78], q_state_0[79], q_state_0[80], q_state_0[81], q_state_0[82], q_state_0[83], q_state_0[84], q_state_0[85], q_state_0[86], q_state_0[87], q_state_0[88], q_state_0[89], q_state_0[90], q_state_0[91], q_state_0[92], q_state_0[93], q_state_0[94], q_state_0[95], q_state_0[96], q_state_0[97], q_state_0[98], q_state_0[99], q_state_0[100], q_state_0[101], q_state_0[102], q_state_0[103], q_state_0[104], q_state_0[105], q_state_0[106], q_state_0[107], q_state_0[108], q_state_0[109], q_state_0[110], q_state_0[111], q_state_0[112], q_state_0[113], q_state_0[114], q_state_0[115], q_state_0[116], q_state_0[117], q_state_0[118], q_state_0[119], q_state_0[120], q_state_0[121], q_state_0[122], q_state_0[123], q_state_0[124], q_state_0[125], q_state_0[126], q_state_0[127]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[64], q_state_1[65], q_state_1[66], q_state_1[67], q_state_1[68], q_state_1[69], q_state_1[70], q_state_1[71], q_state_1[72], q_state_1[73], q_state_1[74], q_state_1[75], q_state_1[76], q_state_1[77], q_state_1[78], q_state_1[79], q_state_1[80], q_state_1[81], q_state_1[82], q_state_1[83], q_state_1[84], q_state_1[85], q_state_1[86], q_state_1[87], q_state_1[88], q_state_1[89], q_state_1[90], q_state_1[91], q_state_1[92], q_state_1[93], q_state_1[94], q_state_1[95], q_state_1[96], q_state_1[97], q_state_1[98], q_state_1[99], q_state_1[100], q_state_1[101], q_state_1[102], q_state_1[103], q_state_1[104], q_state_1[105], q_state_1[106], q_state_1[107], q_state_1[108], q_state_1[109], q_state_1[110], q_state_1[111], q_state_1[112], q_state_1[113], q_state_1[114], q_state_1[115], q_state_1[116], q_state_1[117], q_state_1[118], q_state_1[119], q_state_1[120], q_state_1[121], q_state_1[122], q_state_1[123], q_state_1[124], q_state_1[125], q_state_1[126], q_state_1[127]};
            $$_tmp_measureVar7 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31], q_state_0[32], q_state_0[33], q_state_0[34], q_state_0[35], q_state_0[36], q_state_0[37], q_state_0[38], q_state_0[39], q_state_0[40], q_state_0[41], q_state_0[42], q_state_0[43], q_state_0[44], q_state_0[45], q_state_0[46], q_state_0[47], q_state_0[48], q_state_0[49], q_state_0[50], q_state_0[51], q_state_0[52], q_state_0[53], q_state_0[54], q_state_0[55], q_state_0[56], q_state_0[57], q_state_0[58], q_state_0[59], q_state_0[60], q_state_0[61], q_state_0[62], q_state_0[63], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31], q_state_1[32], q_state_1[33], q_state_1[34], q_state_1[35], q_state_1[36], q_state_1[37], q_state_1[38], q_state_1[39], q_state_1[40], q_state_1[41], q_state_1[42], q_state_1[43], q_state_1[44], q_state_1[45], q_state_1[46], q_state_1[47], q_state_1[48], q_state_1[49], q_state_1[50], q_state_1[51], q_state_1[52], q_state_1[53], q_state_1[54], q_state_1[55], q_state_1[56], q_state_1[57], q_state_1[58], q_state_1[59], q_state_1[60], q_state_1[61], q_state_1[62], q_state_1[63], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar7 = false;
        }
        boolean b_0 = $$_tmp_measureVar7;
        assert b_0 != q_test;
    }
}